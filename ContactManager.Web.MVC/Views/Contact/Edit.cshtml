@model SampleAppWithDapper.Models.Contacts.ContactViewModel

@{
    /**/

    ViewBag.Title = "Create a contact";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/toastr.js/toastr.min.js"></script>
<link href="~/toastr.js/toastr.css" rel="stylesheet" />
<style type="text/css">
    .btnSubmit {
    }

    .btnEdit {
    }

    .btnDelete {
    }

    .btnBack {
    }
</style>
<header class="bg-gradient" id="home">
    <div class="container mt-3">
        <p class="tagline">@Resource.EditContact_Tagline </p>
    </div>
</header>


@if (!string.IsNullOrEmpty(Model.PurposeMessage))
{
    <div class="container">
        <div class="col align-self-center" style="width: 82%; margin: 15px auto;">
            <h6>@Model.PurposeMessage</h6>
        </div>
    </div>
}

<div id="container" class="container">
    <div class="row">
        <div class="col-sm-12 offset-sm-1">
            @using (Html.BeginForm("Edit", "Contact", new { ViewBag.ReturnUrl }, FormMethod.Post, false, new { @class = "deleteForm form justify-content-center", role = "form" }))
            {
                @Html.HiddenFor(m => m.Id)

                @Html.AntiForgeryToken()

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.EMail, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.EMail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.EMail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.TelephoneNumber_Entry, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.TelephoneNumber_Entry, new { @id = "telephone_input_mask", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.TelephoneNumber_Entry, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CreatedUtc, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.CreatedUtc, new { @class = "form-control", @readonly = "readonly", @Name = "" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CreatedBy, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.CreatedBy, new { @class = "form-control", @readonly = "readonly", @Name = "" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ModifiedUtc, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ModifiedUtc, new { @class = "form-control", @readonly = "readonly", @Name = "" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ModifiedBy, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ModifiedBy, new { @class = "form-control", @readonly = "readonly", @Name = "" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                        <button type="submit" class="btn btn-outline-warning btn-sm btnEdit" aria-label="Left Align">
                            <i class="fa fa-edit fa-lg"></i> @Resource.EditContact_Edit_Button
                        </button>

                        <button type="button" class="btn btn-outline-danger btn-sm btnDelete" aria-label="Right Align" style="" data-value="@Model.Id" onclick='window.location = "@Url.Action("Delete", "Contact")" + "/@Model.Id";'>
                            <i class="fa fa-trash-o fa-lg"></i> @Resource.EditContact_Delete_Button
                        </button>

                        <button type="button" class="btn btn-outline-dark btn-sm btnBack" aria-label="Right Align" style="float:right" onclick='window.location = "@Url.Action("Index", "Contact")";'>
                            <i class="fa fa-arrow-left fa-lg"></i> @Resource.EditContact_Back_Button
                        </button>

                    </div>
                </div>
            }

        </div>
        <script src="https://cdn.jsdelivr.net/gh/RobinHerbots/jquery.inputmask@5.0.0-beta.87/dist/inputmask.min.js"></script>
        <script src="https://cdn.jsdelivr.net/gh/RobinHerbots/jquery.inputmask@5.0.0-beta.87/dist/jquery.inputmask.min.js"></script>
        <script>
            $("#telephone_input_mask").inputmask("0999999999");
        </script>
    </div>

</div>